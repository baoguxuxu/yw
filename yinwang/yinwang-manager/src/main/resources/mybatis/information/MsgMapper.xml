<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yinwang.information.dao.MsgDao">

	<select id="get" resultType="com.yinwang.information.domain.MsgDO">
		select `id`,`name`,`type`,`for_names`,`for_ids`,`for_type`,`for_details`,`add_time`,`update_time`,`delete_flag` from t_msg where id = #{value}
	</select>

	<select id="list" resultType="com.yinwang.information.domain.MsgDO">
		select `id`,`name`,`type`,`for_names`,`for_ids`,`for_type`,`for_details`,`add_time`,`update_time`,`delete_flag` from t_msg
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		  <if test="forNames != null and forNames != ''"> and for_names = #{forNames} </if>
		  		  <if test="forIds != null and forIds != ''"> and for_ids = #{forIds} </if>
		  		  <if test="forType != null and forType != ''"> and for_type = #{forType} </if>
		  		  <if test="forDetails != null and forDetails != ''"> and for_details = #{forDetails} </if>
		  		  <if test="addTime != null and addTime != ''"> and add_time = #{addTime} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		  <if test="deleteFlag != null and deleteFlag != ''"> and delete_flag = #{deleteFlag} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="getUserPlotList" resultType="java.util.Map">
		select CONCAT(tp.id,'p') as id,'0' as pId,tp.`name` from t_plot tp where tp.dalete_flag = 0
		UNION ALL
		SELECT DISTINCT tup.user_id as id,CONCAT(tup.plot_id,'p') as pId,
		CASE
			WHEN tu.`name` is null || tu.`name` = '' 
			THEN 
				CASE
					WHEN tu.nickname is null || tu.`nickname` = '' THEN tu.phone
					ELSE tu.`nickname`
				END 
			ELSE tu.`name`
		END as name
		FROM `t_user_plot` tup,t_user tu,t_plot tp
		where tup.user_id = tu.id and tup.plot_id = tp.id and tp.dalete_flag = 0
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from t_msg
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="name != null and name != ''"> and name = #{name} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		  <if test="forNames != null and forNames != ''"> and for_names = #{forNames} </if>
		  		  <if test="forIds != null and forIds != ''"> and for_ids = #{forIds} </if>
		  		  <if test="forType != null and forType != ''"> and for_type = #{forType} </if>
		  		  <if test="forDetails != null and forDetails != ''"> and for_details = #{forDetails} </if>
		  		  <if test="addTime != null and addTime != ''"> and add_time = #{addTime} </if>
		  		  <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime} </if>
		  		  <if test="deleteFlag != null and deleteFlag != ''"> and delete_flag = #{deleteFlag} </if>
		  		</where>
	</select>
	<select id="msgId" resultType="int">
		select nextval('msg_sql') from dual
	</select>
	<insert id="save" parameterType="com.yinwang.information.domain.MsgDO" useGeneratedKeys="true" keyProperty="id">
		insert into t_msg
		(
			id,
			`name`, 
			`type`, 
			`for_names`, 
			`for_ids`, 
			`for_type`, 
			`for_details`, 
			`add_time`, 
			`update_time`, 
			`delete_flag`
		)
		values
		(
			#{id},
			#{name}, 
			#{type}, 
			#{forNames}, 
			#{forIds}, 
			#{forType}, 
			#{forDetails}, 
			#{addTime}, 
			#{updateTime}, 
			#{deleteFlag}
		)
	</insert>
	 
	<update id="update" parameterType="com.yinwang.information.domain.MsgDO">
		update t_msg 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="type != null">`type` = #{type}, </if>
			<if test="forNames != null">`for_names` = #{forNames}, </if>
			<if test="forIds != null">`for_ids` = #{forIds}, </if>
			<if test="forType != null">`for_type` = #{forType}, </if>
			<if test="forDetails != null">`for_details` = #{forDetails}, </if>
			<if test="addTime != null">`add_time` = #{addTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="deleteFlag != null">`delete_flag` = #{deleteFlag}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from t_msg where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from t_msg where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>